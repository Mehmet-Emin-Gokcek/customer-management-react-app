{"version":3,"sources":["components/Search.js","components/AppHeader.js","components/AppFooter.js","constants/index.js","components/form/RegistrationForm.js","components/form/RegistrationModal.js","components/DataTable.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["SearchBar","className","action","method","htmlFor","type","id","placeholder","name","Button","color","style","AppHeader","Navbar","dark","expand","Nav","NavItem","NavbarBrand","href","icon","faUsers","size","pull","NavLink","Search","Component","AppFooter","display","justifyContent","alignItems","width","marginTop","React","USERS_API_URL","RegistrationForm","state","document","email","phone","onChange","e","setState","target","value","submitNew","preventDefault","fetch","headers","body","JSON","stringify","then","res","json","user","props","addUserToState","toggle","catch","err","console","log","submitEdit","updateUserIntoState","this","Form","onSubmit","FormGroup","Label","for","Input","RegistrationModal","modal","previous","title","button","isNew","onClick","minWidth","Modal","isOpen","ModalHeader","ModalBody","DataTable","deleteItem","window","confirm","deleteItemFromState","items","noUsers","colSpan","align","Table","striped","textAlign","length","map","item","scope","updateState","Home","getItems","updated","filter","Container","paddingTop","Row","Col","App","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.42a9db5a.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Button } from 'reactstrap';\r\nconst SearchBar = () => (\r\n\t    <form className=\"middle\" action=\"/\" method=\"get\">\r\n\t\t\t<label htmlFor=\"header-search\">\r\n\t\t\t\t<span className=\"visually-hidden\">Search Customers</span>\r\n\t\t\t</label>\r\n\t\t\t<input type=\"text\" id=\"header-search\" placeholder=\"Search customers\" name=\"s\" />\r\n\t\t\t<Button type=\"submit\" color=\"info\"> <a style={{color: 'white'}}> Search </a></Button>{' '}\r\n    </form>\r\n);\r\n\r\nexport default SearchBar;","import React, { Component } from 'react';\r\n\r\nimport {\r\n    Navbar,\r\n    NavbarBrand,\r\n    NavbarToggler,\r\n    Collapse,\r\n    Nav,\r\n    NavItem,\r\n    NavLink,\r\n    UncontrolledDropdown,\r\n    DropdownToggle,\r\n    DropdownMenu,\r\n    DropdownItem\r\n} from 'reactstrap';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faUsers } from '@fortawesome/free-solid-svg-icons';\r\nimport Search from './Search';\r\n\r\nclass AppHeader extends Component { \r\n    \r\n    render() {\r\n        return <Navbar color=\"dark\" dark expand=\"md\">\r\n\t\t\t\t\t<Nav className=\"container-fluid\">\r\n\t\t\t\t\t\t<NavItem>\r\n\t\t\t\t\t\t\t<NavbarBrand href=\"/\">\r\n\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faUsers} size=\"2x\" pull=\"right\"/>\r\n\t\t\t\t\t\t\t</NavbarBrand>\r\n\t\t\t\t\t\t</NavItem>\r\n\t\t\t\t\t\t<NavItem><h3 style={{color: 'white'}}> Customer Managament System</h3> </NavItem>\r\n\t\t\t\t\t\t<NavItem> <NavLink> <Search /> </NavLink> </NavItem>\r\n\t\t\t\t\t</Nav>\r\n\t\t\t\t</Navbar>;\r\n    }\r\n}\r\nexport default AppHeader; // 8","import React, { Fragment } from 'react';\r\nclass AppFooter extends React.Component {\r\n    render() {\r\n          return <Fragment>\r\n\t\t\t\t    <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}>\r\n\t\t\t\t\t\t<hr className=\"featurette-divider\" style={{width:\"85%\", marginTop:\"2%\" }}/>\r\n\t\t\t\t    </div>\r\n\t\t\t\t    <div style={{ display: \"flex\", justifyContent: \"center\", alignItems: \"center\"}}>\r\n\t\t\t\t\t\t<footer style={{marginTop:\"2%\" }}>\r\n\t\t\t\t\t\t\t<p>Copyright Â© Customer Management Systems 2021</p>\r\n\t\t\t\t\t\t</footer>\r\n\t\t\t\t\t</div>\r\n\t\t\t   </Fragment>;\r\n    }\r\n}\r\nexport default AppFooter;\r\n\r\n      ","export const USERS_API_URL =\r\n  \"https://customermanagementapi2.azurewebsites.net/api/customers\";\r\n\r\n// export const USERS_API_URL = \"https://localhost:44330/api/customers\";\r\n","import React from 'react';\r\nimport { Button, Form, FormGroup, Input, Label } from 'reactstrap';\r\nimport { USERS_API_URL } from '../../constants';\r\nclass RegistrationForm extends React.Component {\r\n    state = {\r\n        id: 0,\r\n        name: '',\r\n        document: '',\r\n        email: '',\r\n        phone: '',\r\n    }\r\n    componentDidMount() {\r\n        if (this.props.user) {\r\n            const { id, name, document, email, phone } = this.props.user\r\n            this.setState({ id, name, document, email, phone});\r\n        }\r\n    }\r\n    onChange = e => {\r\n        this.setState({ [e.target.name]: e.target.value })\r\n    }\r\n    submitNew = e => {\r\n        e.preventDefault();\r\n        fetch(`${USERS_API_URL}`, {\r\n            method: 'post',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name: this.state.name,\r\n                document: this.state.document,\r\n                email: this.state.email,\r\n                phone: this.state.phone\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(user => {\r\n                this.props.addUserToState(user);\r\n                this.props.toggle();\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    \r\n\tsubmitEdit = e => {\r\n        e.preventDefault();\r\n        fetch(`${USERS_API_URL}/${this.state.id}`, {\r\n            method: 'put',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n\t\t\t\tid:this.state.id,\r\n                name: this.state.name,\r\n                document: this.state.document,\r\n                email: this.state.email,\r\n                phone: this.state.phone\r\n            })\r\n        })\r\n            .then(() => {\r\n                this.props.toggle();\r\n                this.props.updateUserIntoState(this.state.id);\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    render() {\r\n        return <Form onSubmit={this.props.user ? this.submitEdit : this.submitNew}>\r\n            <FormGroup>\r\n                <Label for=\"name\">Name:</Label>\r\n                <Input type=\"text\" name=\"name\" onChange={this.onChange} value={this.state.name === '' ? '' : this.state.name} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <Label for=\"document\">Document:</Label>\r\n                <Input type=\"text\" name=\"document\" onChange={this.onChange} value={this.state.document === null ? '' : this.state.document} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <Label for=\"email\">Email:</Label>\r\n                <Input type=\"email\" name=\"email\" onChange={this.onChange} value={this.state.email === null ? '' : this.state.email} />\r\n            </FormGroup>\r\n            <FormGroup>\r\n                <Label for=\"phone\">Phone:</Label>\r\n                <Input type=\"text\" name=\"phone\" onChange={this.onChange} value={this.state.phone === null ? '' : this.state.phone}\r\n                    placeholder=\"+1 999-999-9999\" />\r\n            </FormGroup>\r\n            <Button>Send</Button>\r\n        </Form>;\r\n    }\r\n}\r\nexport default RegistrationForm;","import React, { Component, Fragment } from 'react';\r\nimport { Button, Modal, ModalHeader, ModalBody } from 'reactstrap';\r\nimport RegistrationForm from './RegistrationForm';\r\nclass RegistrationModal extends Component {\r\n\t\r\n    state = { modal: false }\r\n\t\r\n    toggle = () => { this.setState(previous => ({ modal: !previous.modal })); }\r\n\t\r\n    render() {\r\n\t\t\r\n        const isNew = this.props.isNew;\r\n\t\t\r\n        let title = 'Edit User';\r\n\t\t\r\n        let button = '';\r\n\t\t\r\n        if (isNew) \r\n\t\t{ \r\n\t\t\ttitle = 'Add User'; \r\n\t\t\tbutton = <Button color = \"success\" onClick = {this.toggle} style = {{minWidth: \"200px\"}}> Add </Button>;\r\n        } \r\n\t\telse \r\n\t\t{\r\n            button = <Button color = \"warning\" onClick = {this.toggle} style={{minWidth: \"75px\"}}> <span style={{color: 'white'}}> Edit </span></Button>;\r\n        }\r\n        return <Fragment> {button} \r\n\t\t\t\t\t<Modal isOpen = {this.state.modal} toggle = {this.toggle} className = {this.props.className}>\r\n\t\t\t\t\t<ModalHeader toggle = {this.toggle}> {title} </ModalHeader>  \r\n\t\t\t\t\t<ModalBody >\r\n\t\t\t\t\t\t<RegistrationForm\r\n\t\t\t\t\t\t\t\taddUserToState = {this.props.addUserToState}\r\n\t\t\t\t\t\t\t\tupdateUserIntoState = {this.props.updateUserIntoState}\r\n\t\t\t\t\t\t\t\ttoggle = {this.toggle}\r\n\t\t\t\t\t\t\t\tuser = {this.props.user}/>  \r\n\t\t\t\t\t</ModalBody>  \r\n\t\t\t\t\t</Modal>  \r\n\t\t\t   </Fragment> ;\r\n    }\r\n}\r\nexport default RegistrationModal;","import React, { Component } from 'react';\r\nimport { Table, Button } from 'reactstrap';\r\nimport RegistrationModal from './form/RegistrationModal';\r\nimport { USERS_API_URL } from '../constants';\r\nclass DataTable extends Component {\r\n    deleteItem = id => {\r\n        let confirmDeletion = window.confirm('Do you really wish to delete the customer?');\r\n        if (confirmDeletion) {\r\n            fetch(`${USERS_API_URL}/${id}`, {\r\n                    method: 'delete',\r\n                    headers: {\r\n                        'Content-Type': 'application/json'\r\n                    }\r\n                })\r\n                .then(res => {\r\n                    this.props.deleteItemFromState(id);\r\n                })\r\n                .catch(err => console.log(err));\r\n        }\r\n    }\r\n    render() {\r\n        const items = this.props.items;\r\n\t\tconst noUsers = <tr> <td colSpan = \"6\" align = \"center\"> <b> No Users yet </b> </td > </tr> ;\r\n        return <Table striped>\r\n\t\t\t\t\t<thead className = \"thead-dark\">\r\n\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t<th> Id </th> \r\n\t\t\t\t\t\t<th> Name </th> \r\n\t\t\t\t\t\t<th> Email </th> \r\n\t\t\t\t\t\t<th> Document </th> \r\n\t\t\t\t\t\t<th> Phone </th> \r\n\t\t\t\t\t\t<th style = {{ textAlign: \"center\" }}> Actions </th> \r\n\t\t\t\t\t</tr> \r\n\t\t\t\t</thead> \r\n\t\t\t\t<tbody> \r\n\t\t\t\t{\r\n\t\t\t\t    (!items || items.length) <= 0 ? noUsers :items.map(item => ( \r\n\t\t\t\t\t<tr key = { item.id }>\r\n\t\t\t\t\t\t<th scope = \"row\"> { item.id } </th> \r\n\t\t\t\t\t\t<td> { item.name } </td> \r\n\t\t\t\t\t\t<td> { item.email } </td> \r\n\t\t\t\t\t\t<td> { item.document } </td> \r\n\t\t\t\t\t\t<td> { item.phone } </td> \r\n\t\t\t\t\t\t<td align = \"center\">\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<RegistrationModal isNew = { false } user = { item } updateUserIntoState = { this.props.updateState } /> \r\n\t\t\t\t\t\t\t\t&nbsp; &nbsp; &nbsp; \r\n\t\t\t\t\t\t\t\t<Button color = \"danger\" onClick = {() => this.deleteItem(item.id)} > Delete </Button> \r\n\t\t\t\t\t\t    </div> \r\n\t\t\t\t\t\t</td> \r\n\t\t\t\t\t</tr>\r\n\t\t\t\t\t))\r\n\t\t\t\t} \r\n\t\t\t</tbody> \r\n\t    </Table> ;\r\n    }\r\n}\r\nexport default DataTable;","import React, { Component } from 'react';\r\nimport { Col, Container, Row, Button} from 'reactstrap';\r\nimport DataTable from './DataTable';\r\nimport RegistrationModal from './form/RegistrationModal';\r\nimport { USERS_API_URL } from '../constants';\r\nclass Home extends Component {\r\n  state = {\r\n    items: []\r\n  }\r\n  componentDidMount() {\r\n    this.getItems();\r\n  }\r\n  \r\n  getItems = () => {\r\n    fetch(USERS_API_URL)\r\n      .then(res => res.json() )\r\n      .then(res => this.setState({ items: res }))\r\n      .catch(err => console.log(err));\r\n  }\r\n  \r\n  addUserToState = user => {\r\n    this.setState(previous => ({\r\n      items: [...previous.items, user]\r\n    }));\r\n  }\r\n  updateState = (id) => {\r\n    this.getItems();\r\n  }\r\n  deleteItemFromState = id => {\r\n    const updated = this.state.items.filter(item => item.id !== id);\r\n    this.setState({ items: updated })\r\n  }\r\n  render() {\r\n\t  \r\n\t  let button = '';\r\n\t  \r\n\t  button = <Button color = \"success\" onClick = {this.getItems()} style = {{minWidth: \"200px\"}}> All Customers </Button>;\r\n\t  \r\n    return <Container style={{ paddingTop: \"20px\" }}>\r\n\t{button}\r\n      <Row>\r\n        <Col>\r\n          <DataTable\r\n            items={this.state.items}\r\n            updateState={this.updateState}\r\n            deleteItemFromState={this.deleteItemFromState} />\r\n        </Col>\r\n      </Row>\r\n      <Row>\r\n        <Col>\r\n          <RegistrationModal isNew={true} addUserToState={this.addUserToState} />\r\n        </Col>\r\n      </Row>\r\n    </Container>;\r\n  }\r\n}\r\nexport default Home;","import React, { Component, Fragment } from 'react';\nimport './App.css';\nimport AppHeader from './components/AppHeader';\nimport AppFooter from './components/AppFooter';\nimport Home from './components/Home';\nimport Search from './components/Search';\n\n\nclass App extends Component {\n    render() {\n    return <Fragment>\n      <AppHeader />\n      <Home />\n      <AppFooter />\n    </Fragment>;\n  }\n}\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return;\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config);\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service '\r\n                    );\r\n                });\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing;\r\n                if (installingWorker == null) {\r\n                    return;\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all '\r\n                            );\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration);\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.');\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration);\r\n                            }\r\n                        }\r\n                    }\r\n                };\r\n            };\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error);\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n            headers: {\r\n                'Service-Worker': 'script'\r\n            },\r\n        })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type');\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload();\r\n                    });\r\n                });\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config);\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            );\r\n        });\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister();\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message);\r\n            });\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}